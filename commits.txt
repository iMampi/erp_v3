TODO :
multi selection ligne - somme auto
--------------------
001:
mainly working on the template structure of a page
tresos_*.php
ceci est le fichier de base pour toutes les structure à venir.
--------------------
002:
dummy data for test of generation of tresos.php's rows.
fixed encoding problem
created base model for tables
generation and filling of table working. gotta to change how handling data once data production used
imported some helper functions from previous project (JS)
--------------------
003:
created facts_frnsr to see all factures fournisseur
discovered "nowrap" (see general_tips) to solve for newline problem when puting input and button together into a td.
generate_table_001.php working
--------------------
004:
factures_fournisseurs.php:
added modal for details
facture_frnsr_table_details_base.html:
en cours de creation
fixed front end behavvior in facts_frnsr
min-width
button position in modal
header position element in modal
-------------------
005:
added a button "quit modal" different from just "annuler"
added multi nested modal for facture facts_frnsr
added multi nested modal for facture facts_clt
creation of  button "annuler" to quit a nested modal, to go back to the previous modal.

started working on clients clts.php
création de fiche clients
-------------------
006:
starting structure for client
starting structure for facts_frnsr
starting structure for employee
starting structure for article

modified code : "active" on header link when clicked/current page
-------------------
007:
added class .modal-lg to .modal
added min-width for .modal

Tréso:
added buttons to  .affection in tables' td
created modal affectation for tresos
extended dummy
created base nested modal for new tiers, type affectation, doc, etc...
-------------------
008:
change design of filter. from accordion to modal

starting to work on familles
starting to work on categories
starting to work on new_fact_clt
starting to work on new_fact_frnsr
starting to work on mvt interne
starting to work on mvt interne
-------------------
009:

j'ai commencé à utiliser getboundingboxclientrect (js)pour obtenir exactement ce que je voulais.
j'ai traivaillé sur "mvts_internes". et tout marche parfaitement pour l'instant.
il reste à netoyer le script js
-------------------
010:
starting to work on affaire , based on the new lay out with fixed-header.js
added different modals in affaires 

added unité de ccomptage pour "item.php">base formualaires

fixed-header.js: fixed a problem pwhere the hieght of navbar was miss calculated because the first call of getboundingboxclientrect was calculating too fast when changint page when a navbar folded. (like 412px). called getboundingboxclientrect on navBarInnerContainer a second time. 
-------------------
011:
implementing new design with fixed-header in trésos.php, clients.php, employees,frnsrs,items,familles, categories, magasins,facts_clt,facts_frnsr
changed html bases
fixed-header.js: calling getboundingboxclientrect on navBarInnerContainer a THIRD time. 
-------------------
011:
starting to implement modals_processors. 
for that we start on fiche client
-------------------
012:
started working on authorization
started to implement OOP for handling authorization and authentification
autoload.php implemented ussing /classes/ to keep all classes.
created utilites php
-------------------
013:
login for index.php
creation of db.php
now ussing $_SESSION["user"]
now ussing $_SESSION["logged"]
modified UserAuthorization to fit with database
created utilities for formatting database arry used for creating UserAuthorization
logout.php created
login_utils created
DISCONNECT link created
modified some clts.php part using Session to fit with the current User and UserAuthentification class
-------------------
014:
generate_header_logged($name) pour petit message de bienvenu au lieu de faire un snackbar, directement dans le header. on a ajouter la div "title-container" pour faciliiter la manipulation
using generate_header_logged in index
using generate_header_logged in clts. and added redirection to index to log in when not logged
new static class : Session/Logged
-------------------
015:
class Session/Logged is overkilled. changed to namespaced function (see tips on how it works on php7/5);
replacing all Session/Logged by is_logged();
creating is authorized($cycle) for those who can see/visit the page;
strating to add constant "CYCLEx" to each page;

starting to create class for FicheDePaie and its dependencies
-------------------
016:
working on all this fichde paie et calcul. le calcul de l'irsa, des avantages et des congés sont bien mis en place. par contre pour l'instant, c'est hard coded. les calcul dynamique devornt etre implémenté plus tard.
CongesMonthly
MonthlySalary >> Salary Monthly. pour la constance des noms.
-------------------
017:
first iteration of all the calculation for salary done. all set, seems to work. gotta create a unittest. all class looks good
-------------------
018:
worked on clts.php : putted the basics for dynamic content according to logged user's authorization
generate table 001.php : now use can_visit() to authporized pepople and logged people only
clts.php : dynamic content for subheader and table's content
-------------------
019:
frnsrs.php : dynamic content for subheader and table's content
remarque : quand je change dynamiquement le contenu a ffiché selon  les authorizations. ca fout le bordel avec "subheader" sticky. par contre, tant que dans le tableu il y a au moins 2 row, ca marche nickel. on reste sur ca en attendant dans les "generrate table 001.php" (clts et frnsr for now)
items.php : dynamic content for subheader and table's content
creation of autoload function Session\can_create();
client : "nouveau" replaced old funciton by new function from autoload
-------------------
020:
starting to work on creating new client. modulable structure  according to personnality type. set default to "personne physqiue"
human.html
comapny.html

(based on previous project "mp.local")
new_client.js : handling dom manipulation according to personnality type;
    starting to implement saving new client. funciton sendData  async,getINputsValues();
    

starting to create php Class for database : DbHandler, Query
-------------------
021:
created finished DbHandler, to be a singleton;
drop the Query class, using Result class instead.
-------------------
022:
mainly worked on MYSQL query to save new client
Queries class
Binding class
Converter\NewCLient class
tested all thosse new class, now it works.
must finalize DbHandler::execute prepared statemnt. works now for saving new client but must still work on it to get final ID and error handling
-------------------
023:
fixed typo: raison social into raison sociale;
new-client.js : created obj DefaultValuesNewClientFormObj to clean new_client_form. edited base html's inputs by adding "client-form" class to all inputs and selects;
-------------------
024:
new-client.js : in cleanNewClientForm(), added a call to fecthAndAppendHTMLClientForm("human");
-------------------
025:
database : stored function all_clients created;
added $mode param in select_query() and calling  select_query() by default if prepared statement has null binding;
updating generate_table_001 for clts to fill table using results from calling all_client;
all_clients.php : created to fetch/sellect all client and return array
-------------------
026:
clients : les js
fetchandappendhtml() : modifiied. introduction de antikey_
introduction de disabled, param supplementaire pour la function (ref, selectedoption,disabled)
fillinputs(): working
-------------------
027:
working on toast/snackbar.
created a base toast and a test.
toast.js file works liks expected.
TODO : need to customize and template the content of toast, and add alert theme.
-------------------
028:
toast.js fixed.
tweaked #toast-container in css to have what we want.
created helper hideModal() to deal with modals. (see notes on modal show/hide)
implemented next nstep of saveNewclient() on "success".
-------------------
029:
one_client_details.php : print value in json format now;
details-client.js : since tweaking returned value of sendData(), I updated the rseponseHandlerClientDetail()
fixed behavior of typeVente (à credit/au comptant ->encours->echeance)
changed .col-4 for input of tel and email in client formulaire base.
client process : implemented the active_client column for filtering . also, we never totally delete data, we juste make it inactive. so that is why we did this.

/client/generate_table_001.php : $row_counter was not incremented.

client/generate_table_001.php : add class collapse-row to inactive client;
checkpoint fbefore modifying bottsrap modal handler
--------------------
030:
modifying bootsrap modal. no more using css creation but js(see documentation)
fixed see client details and cancel
fixed new client save and cancel
updated see client details taht made field inn modal client new disapear (human and company'sfield)
could not use async on fetchandappendhtml then fillinputs. had to use settimeout for it to work properly in details-clients.js
we start o work on frnsr.php'js
------------------------
031:
fixed some logic naming 
implemented deleteclient process
fixed Dbhandler returning value to handle update , insert and error mysql query
!!!il reste à impementé la vérification de pouvoir
------------------------
032:
server-communication.js : created fetchSessionAuthorizationValue();
to check value of session->user->authorization;
session_request/session_request.php : to communicate with js script to fetch $_session value;
new-client.js : added try cactch for eventhandler. because some elements may not exists if user has not the right authorization.
implemented fetchSessionAuthorizationValue for btnCancelClientNew
------------------------
033:
in details-client.js : showDetails(), changet event.currentTarget to event.target

generate btns_footer , change tit so the btn is not generated if user has not the authorization
a php file buttons footer new php created to generate the buttons for modal-client-client
------------------------
034:
working on modify client.
update_client.php
UpdateClient.php
Queries.php
Bindings.php
create a fucntion update_client in sql.
details-client.js>saveUpdatedClient() : now works correctly
------------------------
035:
finish saveUpdatedClient. now input get disabeld on success. updated message for toast.
update table's row when update successful updateClietnRow();
Session\Functions.php : created can_update();
update_client.php : implemented can_update("client");------------------------
036:
Session\Functions.php : created can_delete();
delete one client.php : implemented can_delete("client");
session_start() after autoload.php
mampi.css : bg-confirmation, to make the background darker when modals called with js. nothing to be done. all handled by modal
confirmation. js : implemented openModalConfirmation()
detail-client.js : btnCancelModalClientDetails => disableInputs();
starting to implement modal-confirmation
implemented for client creation when canceling
implemented for client details modification when canceling and when saving
btnModify and btnSave ; disabled when the other is active.
I had to change the html base : made btn-save disabled by default
------------------------
037:
implemented confirmation for deleteClient
fixed removeTableRow() by adding zeroLeftPadding() when getting
------------------------
038:
created base for filter modal (html). all inputs are disabled by default;
added checkbox for active filterfield;
the js part is in new--client.js;
definition of function done. il reste l'implementation de certaines fucntions.
les bouttons sur ModalFilter sont fonctionnels;
modified the modalClientFilter from data-bs to pure js;
les checkbox sont fonctinnel. disable or enable inputs via changeStateFieldClientFilter();
getDataClientFilter() implemented;
il reste à implementer les champs spécifiquet à chaque personnalités...
------------------------
039:
implemente all fields for filter modal;
created client_filter_basic.html and client_filter_advanced.hmtl;
implemented mangemant of filter_basic and filter_advanced in js (new-client.js);
il reste à implementer le reset du filter (le bouton default et quand on quitte le modal)...
il reste à implementer la gestion behavior avec personnality...
------------------------
040:
implemented filterPersonnalityHandler(), to handle check box and inputs on filterModal according to the personnality slected.
il reste à implementer le reset du filter (le bouton default et quand on quitte le modal)...
------------------------
041:

##new-client.js:
created object defaultClientFilter;
implemented resetFilter();
created button btn-reset-filter();
changed defautl hmtl for client_filter_advanced and client_filter_basic : #actif and #personnality active by default
added those new function when quitting fitler modal

------------------------
042:
implente fitler query...
query use whre like %xx%
Queries
Binding
ObjConverter
bon...filter query marche. la partie sql fetch to php est ok. il y a surement des bug ou des erreur qui traine encore. mais on va faire avec.
il reste à implemnter le traitment js...
aussi, lors de l'ajout d'un nouveau client, la page ne se met pas à jour...&
------------------------
043:
new-client.js :
fillTableClients() opérationnel;
generateRowTableClient() opérationnel;
quelques note to TODO à l'intérieur.;
pas besoin de reset les inputs du modal filter une fois le filtre appliqué. ca crée un bonne user experience je trouve. pour rappeler quellles ont été les parametres.

il faut ajouter un bouton "annuler la selection filtré" ou un turc du genre.
aussi, lors de l'ajout d'un nouveau client, la page ne se met pas à jour...&
------------------------
044:
#new-client.js:
enfin implementer l'insertion dans le tableau principal quand création new client is succesful.
modifier un peu les valeur retourner par saveNewClient(), et la facon dont c'est géré dans le event hhandler
------------------------
045:
fixed a bug with class QueryFilterConditionsConstructor  when desacivating a input filter or putting actif or personnality on "all";
------------------------
046:
new-client.js:
inserting #btn-remove-filter button when applying a filter whose parameters are not default parameter;
create var defaultFilterFlag for that.
insertButtonRemoveFilter();
implemented in functions using around filter.
fixed client_filter_*.html : input prenom missing .input
------------------------
047:
FilterClients.php : bug typo

fixed client_filter_advanced.html : default value for encours and echeance i s0

update client: problem with event handler on btnyes (multiple event handler generateed each time the mfunction openmodalconfirmation is called).fixed
update client : fixed behaviour confirmation modal not hidding
------------------------
048:
only calling insertButtonRemoveFilter() when not existing;
fixed updateClientRow();
fillTableClients() changed to async. using elements\tiers\clients\liste_clts_table_001_base.html as trModel.
------------------------
049:
finished const quitCreation;
finished eventhandler for btnCancelClientNew;
changed makeEditable() into makeEditableClientDetails() and its implementation;
changed implementation of typeVenteInputBehavior(). now can be used on all modals;
------------------------
050:
started working on fournisseur;
renamed btn-cancel-client-new to btn-cancel-new in elements\modals\buttons_modal_footer_new.html;
duplicated company and human for now for client and fournisseur;
implementing modal fournisseur new.
class DTO created, fournisseur implemented in Queries,NewFournisseur, inplementation in Binding,
new_fournisseur.php creatd.
btncancelforunisseurnew works.
btncancelforunisseurnew save works for saving.
SAving works.
keep working on fournisseur...confirmation quit modal wehn saved, add saved line...
------------------------
051:
fournisseur-main.js : cancel and saving working. fixed _cleanFournisseurNewForm(). fixed typo into generateRowTableFournisseur();
Queries.php : added "select_all_fournisseurs";
fournisseur/generate_table_001.php : it works!! fixed the mysql SP.
dumped database Dump20221230-erpv2.sql
------------------------
052:
combined the logic for the "details parts directly into fournisseur-main.js.
now all works(backend and front end) for foruniseur-details. : 'see' and 'cancel';
gotta to still work on modification and saving modifications...
------------------------
053:
fournisseur-main.js : finalized the implementation for modification (saving, canceling). now all works good. maybe some typo to fix
created the php object and script to handle updates on fournisseur.
created the funciton on mysql db
------------------------
054:
added can_xxx() to fournisseur cycle.
working on supprimer for fournisseur: converter\DeleteClient, Queries, Binding;
FINALLY!! the previous commit to fix the confirmation  eventhandler stacking and giving bad stacking snackbar. it actually also stacked the eventhandlerfunction assigned without actually removing it. now it is fixed. it all is centerd in the confirmation.js. so no need to change it in the confirmationObjs.
btn-fournisseur-filter is working;
btn-cancel-filter is working;
DefaultValuesFournisseurFilter is correct.
working on filter fournisseur...
------------------------
055:
in fournisseur-main.js:
fournisseur_filter_basic and fournisseur_filter_advanced 's html created.
appendHTMLFilterAdvanced();
filterPersonnalityHandler();
changeStateFieldClientFilter();
resetFilter();
generateEmptyRowTableFournisseur() : because a display problem occurs when the table is empty;
filterFournisseur();
insertButtonRemoveFilter();
removeFilter();
------------------------
056:
we start working on categorie...
/categorie-main.js:
did a lot. to shorten, everything needed were implemented for the actions below:
    btn-main-new : works great 
    btn-cancel-new : works great
    btn-save-new : work perfectly
#categories_formulaire_base.html: fixed. ok now
still working on categorie...
------------------------
057:
generate_table_001.php for categories;
/categorie-main.js>details:
    btn-details : ok, works great.
    btn-save: ok, works great.
    btn-cancel: ok, works great.
    btn-delete: ...

discovered a bug. bad implement tation of the relation between modificationWatcher and confirmation (openModalConfirmation()). the implementation was bad, because it returned "undefined" instead of anything when yes or no was clicked.
so i  added modificationWatcher affection in the end of yes/noListener, since modificationWatcher is a global variable;
implementing btn-delete: ...
------------------------
058:
openModalConfirmation(): removeEventeListener for both yes and no in both yesListener and No listener;
the bug discovered in commit 057, fixed the implementation in fournisseur-main.js, client-main.js and details-client.js;
implementing btn-delete: ...
------------------------
059:
/categorie-main.js>details:
    btn-delete:  implemented, works great

implementing filter for cycle categorie...
------------------------
060:
done implementing all filtering actions into categorie-main.js.
the serverside is also good. DTo are ok, scripts to query db is ok.
we start working on a new cycle
------------------------
061:
we start working on "famille"
working on the save new famille...
save : works great.
------------------------
062:
generate_table_001.php  for famille : works great.
working on  famille>details... showing is ok. now btns...
modify, save and cancel for famille works fine.
------------------------
063:
lets work on filter for famille now...
btn-cancel-filter : ok
btn-reset-filter : ok
btn-fitler:ok
now working on apply... must implement the code for backend...
btn-apply-filter : ok
btn-remove-filter : ok
------------------------
064:
starting to work on employees...
emps.php : en cours de modification, de normalization.
employee_formulaire_base.html : modifié...ajout des id sur les inputs
NewClients.php : changed to replace "" to \null. beaause mysql consider "" as a value, which put a problem for uniqueness. gotta do the same for all the other Updatexxx et Newxxx sub class of Converter;
UpdateClients.php : did the same;
DbHandler.php : the fix we did before to handle query that did not return a reseult, had some issue disturbing delete operations. we fixed it. new : ok , update : ok, delete:ok, filter :ok.
------------------------
065:
NewEmployee.php : working on it;
employee-main.js : DefaultValuesEmployeeNewFormObj;
employee_formulaire_base.html :
harmonizing the names and fields with the 3 files above and the database...
------------------------
066:
in all my DTO, must use array_keys_exist() in the ternary if
working on newclient.php : nif last worked on.

change filter...
change client and fournisseur...
fixed employee_formulaire_base.html : missing last </div>
backend save new employee works.
fixed NewEmployee.php. there was a problem with data validation and treatement, because of how mmysql treat 0 or null in some specific field.
------------------------
067:
now, working on filling the table for employeses on first load
...
edited liste_emps_table_001_base.html;
finished generate_table_001 for employees;
------------------------
068:
changing db>employees maricule to beecome the primary key.
but there is a foreign key somewhere that prevent me from removing PK on uid.
trying to find it>>>solved. recreated the table
caisses
------------------------
069:
created "emp_formulaire_body_new.php","emp_formulaire_body_read_only.php". inserted them in emps.php;
DeleteEmployee.php;
working on filter...
------------------------
070:
working on filter...
-------------------------
071:
stopeed working filter for employee. working on tresos...
worked on "add item btn" on factures...
realized that i gotta finish articles first.  working on articles...
fixed base structure of php.
change prioryty field to display.
add grabing list of all category and famille to add to coresponding datalist.
created the js file.
NEW-> cancel and create works.
SEE-> in progress...
-------------------------
072:
SEE-> works great.
-------------------------
073:
changed btns footer for details form (item) to php generated (the standard file)
Details-> modify btn works. cancel btn works. start to work on saving modification ...
Queries and binding and converter updated. (not optimal but it works).
implement treatement of response...
-------------------------
074:
item > modify>save changes : nickel, works great.
working on delete...> delete works great.
-------------------------
075:
starting to work on filter...
filter: all works great.
-------------------------
076:
did a little restructuring.
now there is a common data list for all fields that needs one (famille-list, categorie-list). So all input use a datalist  refer to those datalist now.
when opening filter, an option "all" is added to all datalist.
when Modalfilter disappears, the option all is removed.
SO i changed the structure of all the input that used datalist. i removed them.
-------------------------
077:
(thnik about goin back to employee sometime)
starting to work on places...working on save. the backend part is ok. now the front end to handle response...
-------------------------
078:
starting to work on places. front end after saving is ok.
working on places/generate_table_001.php...works great. remember, now we limit filling to 20
-------------------------
079:
places.php...
seeing details is ok.
modify,cancel, save update details is ok. front end and back end is ok for those operations.
-------------------------
080:
SO... i realized that i lost sight of some process. can remember why affaire instead of commande.
so i'm strating to write a "commande" process...
changed layout of the formulaire. NOW, we attribute discount based on total TTC. because in practice, this is what is done when negotiating. customer dotn care about TVA, just the price they gonna pay. added some field to make it easier to attribut discount. and worked on the JS part as well. it works now.
-------------------------
081:
commandes.php
on first load of page, we fill datalists with only th first 20 element of db. just for the show.
we cleared the htmls.
we inmplemented the php sccrip to fill the datalists.
created some new queries derived from select_all_name...adding a limit of 20.
now, we are working on the implementation of the delay ajax to search for an item... created the helpers fucntion delay(). it works. implementation seems okay for first steps. gotta keep going.

I find out that there was a bug with the cycle items.php. fixed the famille and categorie handler when saving new or update, and the table list update.
-------------------------
082:
now, we are working on the implementation of the delay ajax to search for an item... created the helpers fucntion delay(). it works. implementation seems okay for first steps. gotta keep going...hey mampi , start to work on the query construction in js and php now.
it all works now for the "#item-id" input. js is ok, php is ok.
NOTE : i realized that there are some behaviors that bother me with the datalist, suggestion pop up. meanwhile, I searched some library that could help. the easiest and most secure seems to be jquery autocomplete. So i spent some time learning it. looks good and adapted for what i want. gonna implement to my code later when the whole will be functionnal.
-------------------------
083:
on selecting the item code, fill the input "item-name" : works great. (gotta to watchout when gonna implement  jquery autocomplete)
starting to work on filling the price on commande...
-------------------------
084:
starting to work on filling the price on commande...
fill price and default quantity on selection of item:ok;
fixed remisehandler to refer to totalTTCavantremise:ok;
whenever pu or quantity or itemID, or item row deleted is changed, all gets updated :ok.
-------------------------
085:
fixed bug with handling of remmsiee update:ok;
-------------------------
086:
did some reasearch on "input text number only". see geral_tips.txt;
search and fill client input:ok;
did some rename for consistency.
working on a way to handle "empty resulut"...
-------------------------
087:
commandes.php :
implemented simple way to handle no result when doing live search. on item, on client.
added input field "magasin"
created custom footer for commande. need a btn "saving fot later".
implementing the saving/validate commande process...
implemented the grabData function.
-------------------------
088:
discovered another way to handle the remaining "accent" problem (utf-8 eencoding). just add meta tag here and there. update general_tips. gotta implement it everywhere using DOMdocument->LoadHTML.
-------------------------
089:
CHECKPOINT ;
lost database.gotta reconstruct thedatabase;
addingtreatement :
if main tableisempty, generrate an empty row that says NEANT ;
adding utf-8 handling to where i can (see general tips) 
-------------------------
089:
typo in place-main.js>toast's mmeassage on success;
places/generate_table_001.php : added "néant" when no data to show;
items/generate_table_001.php : added meta tag for utf encoding in base html. fixing database for items;
items/new_item.php : fixed back ened and database;
-------------------------
090:
created view_all_items;
items-main.js : modfied fillInputsDetails() so that the uid of famille/category also show up when seeing one items's details.
RESUME CHECKPOINT;
new_commande.php : saving new commande in databas is ok. transaction has been implemented correctly. rollback are ok too. database has been changed to fit our needs;
-------------------------
091:
commande-main.js : 
fixed grabCommandeDataForm(), not grabbing remise and totalapresremise;
implemented generateRowTable();
implemented _cleanNewForm();
implemented chaining for assynchornous execution of "save commande for later";
-------------------------
092:
working on all the process of restting modal-commande-new...
commande-main.js : implemented the process of reseting the modal-commande-new form.it works;
-------------------------
093:
commande-main.js : implemented the confirmation with cancelcommandenew and savecommandenew;
-------------------------
094:
implementing the view comande process..
queries select_one_commande all allc oponent for get headers infos.
js part for filling the modal.
modfiying db : created view for commande.
dumped db.
-------------------------
095:
starting to implement the items'row of one commande...

for savingNewCommande : added formatting using formatedNumberToFloat with the function formatNumbersForDatabase();
class NewCommandeItem fixed. number_format was not parametered correctly.

query "select_all_commandes_header_limit" : limit as set to 50 for dev purpose. change it back to 20
-------------------------
096:
created commande_formulaire_body_table_read_only.php;
implemented the use of custom class Result into DbHandler::execute_prepared_statement(), So we can fetch multiple value from request into result. NOW YOU GOT TO CHANGE EVERY PLACE WHERE RESULT of DbHandler::execute_prepared_statement() is used...

fixed client cycles :
removed field "sexe" in html base human;
updated dataObj["uid"] = result[1] into dataObj["uid"] = result[1][0] because of DbHandler::execute_prepared_statement() 's update for saving new;
updated view one client details js as well because of DbHandler::execute_prepared_statement() 's update;
updated save updated client details js as well because of DbHandler::execute_prepared_statement() 's update;
added modificationWatcher=false when saved succesfully new client;
added modificationWatcher=false when saved succesfully update client;
-------------------------
097:
because of DbHandler::execute_prepared_statement() 's update UPDATING FOR 
CYCLE fournisseur:
removed field "sexe" in html base human;
updated dataObj["uid"] = result[1] into dataObj["uid"] = result[1][0] because of DbHandler::execute_prepared_statement() 's update for saving new;
updated view one fournisseur details js as well because of DbHandler::execute_prepared_statement() 's update;
updated save updated fournisseur details js as well because of DbHandler::execute_prepared_statement() 's update;
added modificationWatcher=false when saved succesfully new fournisseur;
added modificationWatcher=false when saved succesfully update fournisseur;

-------------------------
098:
because of DbHandler::execute_prepared_statement() 's update UPDATING FOR 
CYCLE famille:
updated dataObj["uid"] = result[1] into dataObj["uid"] = result[1][0] because of DbHandler::execute_prepared_statement() 's update for saving new;
updated view one fournisseur details js as well because of DbHandler::execute_prepared_statement() 's update;
updated save updated fournisseur details js as well because of DbHandler::execute_prepared_statement() 's update;

because of DbHandler::execute_prepared_statement() 's update UPDATING FOR 
CYCLE categories:
updated dataObj["uid"] = result[1] into dataObj["uid"] = result[1][0] because of DbHandler::execute_prepared_statement() 's update for saving new;
updated view one fournisseur details js as well because of DbHandler::execute_prepared_statement() 's update;
updated save updated fournisseur details js as well because of DbHandler::execute_prepared_statement() 's update;
fixed a bug where table 'row were not updated when savedupdatedcategory succesful;

-------------------------
099:
because of DbHandler::execute_prepared_statement() 's update UPDATING FOR 
CYCLE places:
updated dataObj["uid"] = result[1] into dataObj["uid"] = result[1][0] because of DbHandler::execute_prepared_statement() 's update for saving new;
updated view one fournisseur details js as well because of DbHandler::execute_prepared_statement() 's update;

class Result and  DbHandler::execute_prepared_statement() modified. added a property "nb_affected_row" fetechbale in class Result
-------------------------
100:
because of DbHandler::execute_prepared_statement() 's update UPDATING FOR 
CYCLE items:
fixzd implemetnation for save, for update, for view.
-------------------------
101:
starting to work again on cycle commande:
fixing view...
fixed a fucking ton of shit!! yeah!!!
refactored addItem() to return a promise (so it can be handle properly with forloop in addItemRowsLoop())
all is handled in fillDetailsItems() working with fillInputsDetailsItem(), disableInputsAndButtons(), addItemRowsLoop();
-------------------------
102:
!!cycle command!!
cancel new commande : works good.
modified function old funcitons into DefaultModalCommande() & removeItemRows()
cancel commande details: works good
-------------------------
103:
!!cycle command!!
working on validate
new commande>>validation work great. changed generate_table_001.php to hanlde the state field (beecause select>option);
-------------------------
104:
fixed DbHandler::execute_prepared_statement(): with new Result(), forgot 1 parameter;
created defaultButtons().
fixed cancel behavior with view commande and new commande.
gave id to some button in client field.
now, if the command is "validate" (state 2), btn-modify will be disabled.
-------------------------
105:
added field input:hidden in commande table's item. #row-uid. to be used in case of update of a commande 
-------------------------
106:
bug from xampp. had to reinstall. add to re clone the repository
since the add of #row-uid in commande items list, the array for item row has changed. SO , had to update the formatFloatsForDatabase() to format the correct data becasue of the new length of the array. For newcommande, saving and validating works great.
working on validate with modified command...
-------------------------
107:
validating and saving modified commands works great. confirmation is ok. defaulting and disabling buttons is ok. changing state when validating and specificaly disabling #btn-modify when validating a command is ok. formating correctly the decimal number when updating table.
adding eventlistener for updating remises' values...
-------------------------
108:
added for eventlistener for updating remises' values on commande details
fixed fillInputsDetailsHeaders() prénoms au lieu de prenom
-------------------------
109:
starting to work on facts_clt.php to harmonize with commandes...
creating queries and other object properties...
validate didnt create entry in factures_client table. modified update_commande.php. now it does.
persistent connection : added p: to DbHandler to create a connection pool
-------------------------
110:
when changing an item in a row, it reinitiate also the quantity. it should not. So we modified fillItemNameAndPrice() by adding a flag defaultQuantityMode. Now All ok.
updated update_commande.php to verify if user has authorization to create facture_client.
-------------------------
111:
facts_clt.php : generate_table_001 is ok. queries needed created. created a new view coz we added a new field payment in factures_client's table.

commande-main.js : because there cleanNewForm() did not disabled the correct input field, we fixed it by creating array s InputsDisabledByDefaultCommandeNewFormArray and InputsDisabledByDefaultCommandeRowItemArray. And added a few step into cleanNewForm(). Also fixed a part of th code where all price zould not update correctly in newCommandeForm
-------------------------
112:
fixed algo for eventhandler on modalCommandeNew.addEventListener('keyup'...if ((event.target.id == "client") && (event.key))) and changed function for fillItemNameAndPrice() in fact-clt-main.js and  commande-main.js. My previous fix introduced new bug. NOW IT IS OK. when selecting an item to add to the order/facture, the quantity will be 1 by default if new row with no item yet. If quantity was already filled and you are just changing the item, it will not update the quantity but juste the item uid, price, item's name and total.

working on fact-clt.js :
+prices updating correctly when item added,removed, modified.
+fixed data-bs on html for table_list
+commande-new : client selection works
+facture-detail : all works. seeing and quitting (cleaning). no modification possible
-------------------------
113:
modals_processors\commande_formulaire_body_read_only.php : now btn-add-client is disabled;
modals_processors/facture_client_formulaire_body_read_only.php : now btn-add-client is disabled;
elements/facts_clt/facture_client_commande_header_base.htm: created;
database\select\one_facture_client_details.php: created;
class SelectOneFactureClient created with corresponding Queries and Binding;
modified fillInputsDetailsHeaders() function, and DTO_FILL_INPUT_HEADERS in js file;
-------------------------
114:
fact-clt-main.js : saving new commande works.
-------------------------
115:
facts_clt\processors\generate_table_001.php : implemented can_visit() correctly with cycle_facture_client;
database\save\new_commande.php : creation of facture in db was not implemented. now it is. it also return the needed new uid according to http_referer (commande or facture) for filling table
js\fact-clt-main.js : implemented the whole process for directly creating new facture.
-------------------------
116:
starting to work on avoir_client...
created tables and views for avoir_client_headers.
modified base  php and html for avoir_client.
-------------------------
117:
i decided to add .modal-fullscreen-xxl-down to modal-dialog. it looks better for the text inside inputs that wraps-up. (gotta do that for all later).
modified defqult border in table because of border bottom heigt inconsistance in modals. (gotta update every where else)
working on avoir_client...
avoir-client-main.js : cancel is ok. search client is ok. search item is ok.
-------------------------
118:
still working on avoir_client cycle. 
ajout d'un nouveu modal pour choisir entre avoir facture based or avoir with no base.
j'ai eu des soucis avec le multiple modal. il s'est avéré qu'il s'agissait juste d'un tag </div> qui manquait. on va créer un commit ici pour ne plus se faire chier avec cette erreur de merde.
du coups, POUR LE PROCHAIN COMMIT, il va falloir revoir les behaviors déjà existant.
-------------------------
119:
still working on avoir_client cycle.
working on searchFacture()...
searchFacture() works. implemented into searchLive(). treatement of result is ok.
il reste à faire le remplissage du formulaie...
-------------------------
120:
avoir-main.js:
getData() to grap data in datalist facture;
fillHeadersFactureOrigin() - fill data needed for headers;
formatStringClientName(headersData) implemented;
fillItemsFactureOrigin() implementing...
-------------------------
121:
fixed algo error in one_facture_client_details.php.
fillItemsFactureOrigin() done.
fillInputsDetailsItems() implemented for 'new'. gotta see later for 'view'.
changed avoir_formulaire_body_table_read_only.php to show no row by default;
-------------------------
122:
implementing number_format() in php file...
commande
facture_client
avoir
+++
implementing .toLocaleString("fr-FR", {             minimumFractionDigits: 2,                maximumFractionDigits: 2,}) in js file. the idea is to replace my custom formatter...
facture_client
+++
fixed action on selection of facture-origin : disable inputs except item-quantity

changed avoir_client_headers.html base

filling on cliking the facture.
eventhandler on quantity changes works.

implementing .toLocaleString("fr-FR", {             minimumFractionDigits: 2,                maximumFractionDigits: 2,}) in js file. the idea is to replace my custom formatter...
-------------------------
123:
changed avoir_clt_table_details_base.html : added "min=0" attribut to #item-quantity input. Now cannot go below zero.
fillInputsDetailsItem() : now it automaticallly set "max" attribut to #item-quantity so we cannot go above the initial quantity.
#btn-create-avoir is disabled by default. now it is enabled when totalTTCapresremise >0.
working on cleaning and putting back to default avoir Facture Based...
base of cleaning done. cleaning works when cancel the creation of a new avoir.
-------------------------
124:
avoir-main.js:
adding cleanNewForm() in algo when choosing a new fact.
checkout branching for implementing me custom select-picker.
-------------------------
125_a:
changed and fixed layout of select-picker;
changed eventhandler and facture for livesearch of facture.
-------------------------
126_a:
still fixing some details...details fixed
i found out that i started with "one_facture_client_details" for facture selection. this is wrong. i am changing it to "filtered_facture_client". So i am creating it from the ground up... SO I WAS WRONG AGAIN. because of the difficulties to make a filter for facturess's headers and with the factures'items list, i went back and just fixed addDatalistElement() by adding :
if (mode === "facture") {
    arrayData = [arrayData]
}
now the btn fills out with num-facture.
selecting a diffrent num-fact clean the form and fill the form with the new data.
-------------------------
127_a:
when cleaning form facture based, clean the btn...>> cleaning btn(select-picker) is ok.
const currentUser is created via php directly.
modified addDatalistElement() : the last part for no result was still using OPTION tag instead of LI tag. now fixed. gonna have to change all other field still stuck with datalist;
fillInputsDetailsItem() : added formatNumber() into algo for item-pu;
-------------------------
128_a:
added #commande-uid input hidden.
renamed modal-avoir-new into modal-avoir-new-based in html base.
database modified. added field "commande_initial_uid" in "commande_details" table.
working on saving avoir factre based...
le cycle de sauvregarde pour un avoir fature based marche. le back end en tout cas.
la base a été modifié 3 fois.
il rest à arranger tout le process apres le toast et le grab returnable quantity when creating  avoir fature based...
-------------------------
129_a:
i fixed the process where it calculate correctly the sum or "avoirable item." : new php file were created. new routes appeared. database was modified. now it works.
-------------------------
130_a:
there were bugs in the previous commits :
-wrong query while saving new avoir
-wrong key in saving new avoir
-created a view_all_avoirs_client_headers_limit
-added hidden input for the table list of avoir html
-modified the table list of avoir html
-fixed the table list of avoir generation
-------------------------
131_a:
change the function new_commande in mysq. removed the parametter  unsigned""to save avoirdetails correctly;
now working on  close confirmation, clean form, add nez line on table recap, js format value to support negative value...
when saving :
-clean form : ok
-close modal confirmation : ok
-close modal form : ok
-toast is : ok 
-add new line to table : ok
-------------------------
132_a:
there was a problem with commande table generate. it was because of selction option "3" avoir was missing.
various fix : implemented format number here and there;
changed #type's option to the correct one;
modified js formatedNumber() : space was still considered as final result  ("- 180 000" instead of "-180 000". and same for positive value.);
modified fs updateItemTotalPrice():the math changes the value tp negatived directly. and it cascades to all the others.
modified classe NewCommandeAvoirHeader because now values are directly negative in client side. NO need for NewCommandeAvoirItem, all was ok there.
-------------------------
133_a:
modified database > table : items > added field "prix_variable". uptade the function new_item();
added prix_variable in base html for items;
updated the item-main.js : added "prix-variable" everywhere it needed, with the right implementation.
tested once. worked.
-------------------------
134_a:
working back on create avoir (not based not facture)...
fixed eavoir simple implementation.
duplicated all avoirBased element for avoirSimple. gotta refactor this later. now opening those two works correctly.
changed the position of remise-taux and remise-montant in all avoir.
placed more appropriate placeholder value for all input montant related instead of hard value.
changed DefaultValuesAvoirNewFormObj, modified cancelCreationObj.
implementing eventlistener for modal-avoir-simple 
-------------------------
135_a:
working on js > openNewAvoirFactureSimple(). now row item created,
now itemis filled by default.
implementing getter for caching system with getCachedData(). a layer of abstration to ease the use of caching+fectching and the readability...
items/generate_table_001.php : 
modified to array_search($item["category_uid"], array_column($all_categories_name, "uid")); for finding key ofof a value in a multidimentional array;
because if a ai-uid is missing (number jumped), it will fail with the old method. now it wont.
-------------------------
136_a:
libellé/numéro de série
fixed selectionClient() uid is near
textarea
client fetch
calcul update
splited num-serie for num-serie et libelle. updated database. changes implemented for avoir client.
added #state input hidden to html of avoir simple.
saving simple avoir :... problem with database > constrain for foreign key commande-uid and facture uid (i think)>>FIXED. this was a problem  due to converter NewCommandeItem. wrong count of array key et wrong reatement of value for initail_commande_uid. returned 0 insted of NULL.
-------------------------
137_a:
working on cleaning the form > the li in dropdown (the suggestions). looks like it is a mtatter of promise qnd for loop... : FIXED;

added #search-facture and #search-client to DefaultValuesAvoirNewFormObj;

added .input to #search-facture and #search-client
-------------------------
138_a:
.text-capitalized added for cycle CLIENT >forms.
removed extra div in clientformulairebase.html causing non alignement non uniformity.
fixed Bindings for Converter\SelectOneClient

!!!!working on cycles Commandes!!!!
implemented the btn dropdozn pour item-uid into #table-facture; the html, the js interaction;
autofocus on #search-item when opening dropdown;
fixed formatedNumberToFloat() not treating right &nbsp;
implemented setInputValue() and grabInputValue() for a better handling of nodes with .input being a input tag or a button tag;


woring on ...
traitement pour indentifiable et stockable...
....
-------------------------
139_a:
!!!!working on cycles Commandes!!!!
implemented the btn dropdown pour #client into #modal-commande-new; the html, the js interaction;
autofocus on #search-item when opening dropdown for button@client;
put eventlistener in capture mode : modalCommandeNew on click, tableFactureBody on click. because there was an bug calling tableFactureBody on click when a .search-result was selected from dropdown-client;
correct behavior is correct for CommandeItemRow when object is identifiable or not.
-------------------------
140_a:
fixed behavior not working properly for CommandeItemRow when object is identifiable or not.
fixed NewCommandeItem. after the introduction of commande_initial_uid, the array key was not enough.
fixed generateRowTable(). it was the one for facture that was written there.
correct behavior is correct for CommandeItemRow when object has prix_variable or not.
DefaultValuesCommandeNewFormObj : added identifiable, stockable,prix-variable
fixed prblem where all new commande created were in state =0. it was because there was a second input #state with no value. I deleted it. now it works.

implementing stock verification upon validation of command...
new_commande.php vrify stock for tsockable items. no treatement for identifiable yet.
check_stock.php created as file for utlities functions. check_available_stock() is inside.
in command-main.js, identifyInvalidType() and outOfStock() were created to handle out of stock case. gotta expand to all error/invalid case...


updated all when price update+
default pour client
client when viewing

-------------------------
141_a:
separated eventlistener on modalCommandeNew per part of the modal. to avoid conflict with .search-result;
update all when price unitaire changes;
set default value pour btn client;
corrected tipo "choississez" into "choisissez";
now client is filled correctly when viewing an order;

input and data validation (number first,)...
numserie algo...
-------------------------
142_a:
database changed ot table "identifiable";
changed html of commande table details.
implemented backend for num-serie in php and js. the selection process.

limit qty to 1 when identifiable...
-------------------------
143_a:
implemented algo : 
-when identifiable, quantity is locked to 1.
-when num serie selected, all montant are updated.
-when changing item, item-num-serie is cleaned, and all montant updated.
-------------------------
144_a:
to all btn-dropdown, added class .form-control .form-control-sm ;
updated database. modified view_all_commandes_details;

first implementation of input validation (number text). we experiment it on commande for now. gotta refactor that later. created validateNumberOnlyTextInput(), validateNumberTextInput(),validateNumberMinMaxTextInput(),formatNumberForTextInput()
updated tauxAndMontantDiscountInputHandler() to set formatted value for reading.


btn modify on modal commande details... num-serie should not be editable if not identifiables...
add input hidden active...
modify query fetching all commande details...
btn client is notdisabled when you open new cmmande and modificationWatcher is 1 before opening modalcommandedetails...
formatNumberForTextInput() : check if we can use .toLocaleString() instead...
implement input number-text validation for item-pu and item-quantity...
-------------------------
145_an:
cyclce commandes : 
implemented required verification for form when saving new or validating new commandes.
added some is-invalid handling when submitting.
implemented AutoNumeric in all in all newForm. relacing .toLocaleString() by autonumeric.

-------------------------
146_an:
added     "item-num-serie": true to DEFAULT_BUTTONS_DISABLED_STATE_COMMANDE_NEW.

updated php class NewCommandeItem fixed with new number of argument.

implementation of ERROR_FLAG_MESSAGE_OBJ for ToastShowClosured.

modified inputRequired() and outOfStock() to return a value. value to be used with ERROR_FLAG_MESSAGE_OBJ.

implemented autonumericItemRow() after every call od addItem()

-------------------------
147_an:
DEFAULT_VALUES_COMMANDE_NEW_FORM_OBJ have "item-uid" as new item. for cleaning form correctly.

implementing the process of checking disponibilities of an identifiable item. it works. 
but now we found something else. the need to remove a suggested num serie from other lines if one is already in one line...
check_available_stock() refactored.
check_identifiables() implemented.
refactored saveCommandeNew() by implementing let customMessage = ERROR_FLAG_MESSAGE_OBJ[identifyInvalidType(result[1], modal)] for custom message when gettingg response from backend after verification idetifiable or stock.

updated ERROR_FLAG_MESSAGE_OBJ["out-of-stock"] to return a message.

removed one call of identifyInvalidType() at line 1096. not needed anymore cause of refactoring.

when a field is invalidand and it is a btn .dropdown-toggle, the .is-invalid is remove on update but modificationWatcher=false. implementing changing modificationWatcher=true when changing a  btn .dropdown-toggle.

implemented handling for "num serie double" and "num serie not available".
-------------------------
148_an:
backend process for UPdateIdentifiable. DTO, Binding, Queries, etc
all implented to saveCreationObj and validateCreationObj.
-------------------------
149_an:
working on avoir :
fixing fillInputsDetailsItem()
fixing grabAvoirDataForm()
updated database view_all_commandes_details
updated avoir_clt_based_table_details_base.html : added input identifiable, stockable to work with the updated grabAvoirDataForm() and fillInputsDetailsItem()
fixing addDatalistElement() by using addName() as abstraction...
implemented AutoNumeric in html and in js logic.
Removed all call of formatedNumberToFloat() and formatedNumber().
changed input type of .remise-taux and .remise-montant to text instead of number for facture,avoir, and commandes 's html(used in avoir cycle)
-------------------------
150_an:
renamed function to formatClientName to formatCLientNameSearchResult();
created abstraction another formatClientName();
refactored addDatalistElement();
-------------------------
151_an:
fixed fillInputsDetailsItemRow() disturbing the behavior of disableInputsAndButtons() when trying to open a modalDetails

working on avoir cycle:
implemented return of stockable item. ok, tested
implemented return of stockable item. ok, TO TEST...

when choosing a facture with identifiable item, not showing correctly. just  one line combined for all
-------------------------
152_an:
when choosing a facture with identifiable item, not showing correctly. just  one line combined for all>>> fixed. edited class Queries::$selection_commande_items_for_avoir to "group by num_serie, item_uid".

returning item with avoir now works great. it updates stock and identifiables.
fixed implementation of updating stock and identifiable : 
if quantity==0, skip the itemrow for new commande or avoir. to implement everywhere in the future
-------------------------
153_an:
facts_clt.php : #modal-details  : ajout de modal-xl modal-fullscreen-xl-down

fact-clt-main : modified fillInputsDetailsItem. 
                added new element into idToKey :
                    "item-libelle": "description_item",
                    "item-num-serie": "num_serie", ;
                TO CHANGE INTO DTO_FILL_INPUT_ITEM_ROW;

                created setInputValue();

                imlemented calling of setInputValue() dans fillInputsDetailsItem();

                fillInputsDetailsItem was defined 2 times;

avoir-clt-main.js : 
    implemented setInputValue();
    created inputNameToKey() to use why DTO;

rewrote  elements\avoirs_clt\avoir_clt_based_table_details_base.html

rewrite all DTO to match the strucutre of DTO_FILL_INPUT_ITEM_ROW...
-------------------------
154_an:

avoir-clt-main.js : 
fixed tva display for details

commande-main.js :
fixed tva display for details
fixed DTO for tva display

created new query "select_all_commandes_positives_header_limit"
from the problem that in the commande cycle, commandes for avoir were not displayed correctly becasue of the limitation for quantity "cannot be inferioir to zero"
-------------------------
155_an:
on command  cycle :
formatCLientNameSearchResult(ObjectData) : rewrote the management of ObjectData . because different for searchClient and ShowCommandDetails

on avoir cycle :
fillInputsDetailsItem() : refactored the last part. since last commit, the input #item-quantity was being filled when created.

autonumericItemRow(): change behavior on #item-quantity if new or view. condition is based on modal name.

fixed behavior for avoir without any line to return anymore, the input #item-quantity

implemented DefaultModalCommandInputs()

fillInputsDetailsHeaders() : autonumeric  if (NUMBER_INPUT_HEADERS.includes(element.id)) 


on facture client cycle:
added  "item-num-serie" to const InputsDisabledByDefaultCommandeRowItemArray
filled DefaultValuesCommandeNewFormObj for "client"
updated autonumericItemRow(modal); so i should really consider centralizing all the commun funcitons
fixed formatCLientNameSearchResult() as in the command cycle comment (155_an)

fillInputsDetailsHeaders() : autonumeric  if (NUMBER_INPUT_HEADERS.includes(element.id)) 

cycle facture client...
fix this save for later...
custom message "voir dans commande. ici, il n'y a que des factures validé ici"...
-------------------------
156_an:

cycle facture_client:
savegarde pour plus tard > ok.
validation facture > ok.
saveCreationObj > added the "no" key and process. changed the html base used when calling generateRowTable().
validateCreationObj> added the "no" key and process. remove the generateRowTable() calling.
generateRowTable() > updated the keys coz of the update of th ebase html mentionned above. add the part for formatting number. hard coded default fill for #payment.payment.input.

fix the initial generation of row in the tableau for facture_client...
-------------------------
157_an:
fix the initial generation of row in the tableau for facture_client... >> fixed

cycle facture... implemented the follwing :
"#btn-save-new" and "#btn-validate-new" are disabled if the totalTTCapresremise is not superior to zero.
it was hard coded. need to refactor.
caling the process after every call of updateAllHeaderPrices().
 and updated the process of clicking on "#btn-main-new" : disabling "#btn-save-new" and "#btn-validate-new"

fixed the code of filling the inputs headers not dealing correctly with the date.

updated DTO_FILL_INPUT cow of "datetime" key from DB.


the imput .remise-taux must be limited. a maximum must be set. > do constant update of its autonumeric > right now, we can type whaever amount we want...


in facture_client
fix the html base for facture header...
done for the details part. do the new modal part now...
-------------------------
158_an:
in facture_client cycle :
fix the html base for facture header...
done for the details part. do the new modal part now...
done for the new.
renamed modal name from modal-commande-new to modal-main-new

the imput .remise-taux must be limited. a maximum must be set. > do constant update of its autonumeric > right now, we can type whaever amount we want...FIXED

when filling the headers .remise-taux in details, update maximumvalue. > ok
updated updateAllHeaderPrices() so it updates update maximumvalue for .remise-taux everytime the value is changed. > ok

updated to :
    new AutoNumeric.multiple(".remise-montant", [defaultAutoNumericOptions, { minimumValue: 0, maximumValue: 0 }]);


tried to acces the site from myphone. I realized some file path were wrong coz hardcoded. So i updated them using __DIR__.> some fixed. not sure if all was done. gotta see it when beta testing.
-------------------------
159_an:
fact-clt-main.js:
updated to :
    new AutoNumeric.multiple(".remise-montant", [defaultAutoNumericOptions, { minimumValue: 0, maximumValue: 0 }]);
DefaultModalCommandInputs() :
added this to reset the maximumValue of .remise-montant
    AutoNumeric.getAutoNumericElement(modal.querySelector("#remise-montant")).update({ maximumValue: 0 });

commande-main.js:
updated to :
    new AutoNumeric.multiple(".remise-montant", [defaultAutoNumericOptions, { minimumValue: 0, maximumValue: 0 }]);
DefaultModalCommandInputs() :
added this to reset the maximumValue of .remise-montant
    AutoNumeric.getAutoNumericElement(modal.querySelector("#remise-montant")).update({ maximumValue: 0 });
showCommandeDetails() : rewrote to this        
    let parent = event.target.parentNode.parentNode;
-------------------------
160_an:
cycle_facture_fournisseur:
edited db for simple table factures_fournisseur. saved it in OneDrive

rewrote the facture_frnsr_header_base.html to coreespond to the current standard(my standard),
and change the table_details. now we use commande_table_details_base.html

the php part where we arrange the display of header (user, magasin)...
the js part of factures_fournisseur...
-------------------------
160_an:
the php part where we arrange the display of header (user, magasin)...DONE 

edited db:
table items : addes 2 new fields : pour_achat, pour_vente.
edited view_all_items as well
erpv2-20240601.sql

created 2 new converter class:
SelectionItemsAchat et SelectionItemsVente (les 2 extends SelectionItems)
-------------------------
161_an:

the js part of factures_fournisseur...

line  946
// TODO : it should update the tva avant remise too

clean default unserie not disabled...
checkpoint before rebuilding the calc part...
-------------------------
162_an:

bon, ca déconne surment dans ma logique, dans ma concpetion, mais la meilleur solution que j'ai trouvé pour l'instant, c'est de ne pas créer d'abstraction pour chaque event. >>> pour chaque event, on va implementer et appeller les functions une par une POUR L'INSTANT. apres, on pourra résumer et créer une couche d'abstraction.

la gestion de tva-variable et tva-flag est OK. les premier tests sont bon. mais il faudra surement tester en profondeur.

on commence à mettre à jour le cycle article/item... 
-------------------------
163_an:
on continue à mettre à jour le cycle article/item... 
on remplace les input avec datalist avec les boutons datalist  et search pour les champs famille et categorie.

mettre à jour la partie js pour ce remplacement avec des boutons. la partie fill et search et filter. FAIT.

ajout de .toLowerCase() dans filterButtonDropdown()
il reste la partie getFormInputValues...
-------------------------
164_an:

prix de vente disabled et set to zero if pour vente is not checked. same pour prix variable...

mise a jour de la DB : la function new_item()
mise à jour Binding pour NewItem
mise à jour NewItem
mise à jour Queries

mise à jour getFormInputValues()

mettre à jour le cleanForm dans cycle item... 
savegarde new items apres la mise a jour des champs : OK
-------------------------
165_an:

prix de vente disabled et set to zero if pour vente is not checked. same pour prix variable...: DONE
mettre à jour le cleanForm dans cycle item... :DONE 
-------------------------
166_an:
item cycle update an entry

updated modals_processors\item_formulaire_body_read_only.php

added Boolean() called in setInputValue() for checkbox

item-main.js
updated DTO_FILL_INPUT with the new fields
now using setInputValue() in fillInputsDetails()
-------------------------
167_an:

updated SelectionItem->generate_condition(): the "or" part needs "( ... )" to satisfy the priority between OR and AND;

updated const DefaultValuesItemNewFormObj in item-main.js : added search-famille and search-categorie;

cycle facture fournisseur :
when selecting an item, the pirx unitaire field must be enabled. always. must not behave like in facture client/commande...

added to fillInputsDetailsItemRow():
rowNode.querySelector(".input#item-pu").disabled = false;

working on saveCreationObj...saveFactureNew()...

facture_frnsr_header_base.html : input date had not correct class and no id

updated db : erpv2-20240705.sql
erpv2-20240706.sql : added function new_facture_fournisseur

created NewFactureFournisseur.php, new_facture_fournisseur.php
updated Binding.php, Queries.php

test the process of saving a new facture fournisseur...
-------------------------
168_an:
working on the facture fournisseur cycle...
table list is correct.
btn.btn-details works correctly.
cleaning and filling the modal-facture-details works correctly.
fillInputsDetailsItemRow() updated.
changed a few php file related to this facture fournisseur cycle.